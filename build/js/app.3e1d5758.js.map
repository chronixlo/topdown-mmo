{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/helpers.js","webpack:///./src/scripts/controls.js","webpack:///./src/scripts/player.js","webpack:///./src/scripts/consts.js","webpack:///./src/scripts/Entity.js","webpack:///./src/scripts/Entities/Tree.js","webpack:///./src/scripts/Entities/Stone.js","webpack:///./src/scripts/index.js","webpack:///./src/assets/axe.png","webpack:///./src/assets/log.png","webpack:///./src/assets/ground.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","screenToMapCoords","_x","_y","x","player","halfWidth","y","halfHeight","mapSize","mapToScreenCoords","rand","min","max","Math","floor","random","this","mouseX","mouseY","mouse1","mouse2","destination","facing","facingTarget","radius","target","wcStart","logs","Date","now","dead","isClick","mapCoords","controls","playerCoords","nearestIntersect","mapElements","filter","el","forEach","playerBoundsSegments","segment","is","pointA","pointB","pointC","pointD","z1","z2","z3","z4","dist","tempA","tempB","xCoor","yCoor","distance","hypot","lineIntersection","start","end","delta_x","delta_y","theta_radians","atan2","time","setDestination","width","height","lastAction","MOVEMENT_SPEED","TURN_SPEED","ID","Entity","options","id","type","boundHeight","boundWidth","img","deltaX","deltaY","playerBounds","x1","x2","y1","y2","segments","Tree","treeImgs","Array","fill","map","_","Image","src","treeTypes","Stone","stoneImgs","stoneTypes","canvas","document","getElementById","ctx","getContext","viewWidth","innerWidth","viewHeight","innerHeight","mapBounds","axeImg","axe","groundImg","ground","logImg","log","playerImg","trees","treeType","assign","stones","stoneType","updatePointerPosition","e","touches","clientX","clientY","pointerUp","pointerDown","addEventListener","preventDefault","lastFrameTime","loop","frameTime","clearRect","tree","find","setTarget","woodcut","turnDistance","abs","ccw","PI","toTurn","toMove","px","py","collision","playAreaScreenCoords","fillStyle","fillRect","drawImage","elCoords","destinationScreenCoords","delta","beginPath","strokeStyle","lineWidth","arc","closePath","stroke","setTransform","rotate","percent","cellSize","font","textBaseline","fillText","requestAnimationFrame"],"mappings":"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","file":"js/app.3e1d5758.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([112,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import player from \"./player\";\r\nimport { halfWidth, halfHeight, mapSize } from \"./index\";\r\n\r\nexport function screenToMapCoords(_x, _y) {\r\n  let x = _x + player.x - halfWidth;\r\n  let y = _y + player.y - halfHeight;\r\n\r\n  // fit to map\r\n  if (x < 0) {\r\n    x = 0;\r\n  } else if (x > mapSize) {\r\n    x = mapSize;\r\n  }\r\n\r\n  if (y < 0) {\r\n    y = 0;\r\n  } else if (y > mapSize) {\r\n    y = mapSize;\r\n  }\r\n\r\n  return { x, y };\r\n}\r\n\r\nexport function mapToScreenCoords(_x, _y) {\r\n  const x = _x - player.x + halfWidth;\r\n  const y = _y - player.y + halfHeight;\r\n\r\n  return { x, y };\r\n}\r\n\r\nexport function rand(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n","class Controls {\r\n  constructor() {\r\n    this.mouseX = 0;\r\n    this.mouseY = 0;\r\n    this.mouse1 = false;\r\n    this.mouse2 = false;\r\n  }\r\n}\r\n\r\nexport default new Controls();\r\n","import { screenToMapCoords } from \"./helpers\";\r\nimport controls from \"./controls\";\r\nimport { mapElements } from \"./index\";\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.x = 5000;\r\n    this.y = 5000;\r\n    this.destination = null;\r\n    this.facing = 0;\r\n    this.facingTarget = null;\r\n    this.radius = 20;\r\n    this.target = null;\r\n    this.wcStart = null;\r\n    this.logs = 0;\r\n  }\r\n\r\n  woodcut() {\r\n    this.target.logs--;\r\n    this.logs++;\r\n\r\n    if (!this.target.logs) {\r\n      this.target.dead = true;\r\n      this.target = null;\r\n      this.wcStart = null;\r\n    } else {\r\n      this.wcStart = Date.now();\r\n    }\r\n  }\r\n\r\n  setDestination(isClick) {\r\n    this.target = null;\r\n    const mapCoords = screenToMapCoords(controls.mouseX, controls.mouseY);\r\n    const playerCoords = { x: this.x, y: this.y };\r\n\r\n    let nearestIntersect = null;\r\n\r\n    mapElements\r\n      .filter((el) => !el.dead)\r\n      .forEach((el) => {\r\n        el.playerBoundsSegments.forEach((segment) => {\r\n          const is = lineIntersection(\r\n            playerCoords,\r\n            mapCoords,\r\n            segment.start,\r\n            segment.end\r\n          );\r\n\r\n          if (is) {\r\n            if (!nearestIntersect || is.dist < nearestIntersect.dist) {\r\n              nearestIntersect = is;\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n    if (nearestIntersect) {\r\n      mapCoords.x = nearestIntersect.x;\r\n      mapCoords.y = nearestIntersect.y;\r\n    }\r\n\r\n    const delta_x = mapCoords.x - this.x;\r\n    const delta_y = mapCoords.y - this.y;\r\n    const theta_radians = Math.atan2(delta_y, delta_x);\r\n\r\n    this.facingTarget = theta_radians;\r\n\r\n    this.destination = {\r\n      x: mapCoords.x,\r\n      y: mapCoords.y,\r\n      time: isClick ? Date.now() : this.destination && this.destination.time,\r\n    };\r\n  }\r\n\r\n  setTarget(target) {\r\n    if (!target || target.dead) {\r\n      this.target = null;\r\n      this.setDestination();\r\n      return;\r\n    }\r\n    const distance = Math.hypot(\r\n      target.x + target.width / 2 - this.x,\r\n      target.y + target.height / 2 - this.y\r\n    );\r\n    if (distance < target.width + this.radius) {\r\n      const mapCoords = screenToMapCoords(controls.mouseX, controls.mouseY);\r\n\r\n      const delta_x = mapCoords.x - this.x;\r\n      const delta_y = mapCoords.y - this.y;\r\n      const theta_radians = Math.atan2(delta_y, delta_x);\r\n\r\n      this.facingTarget = theta_radians;\r\n\r\n      this.lastAction = Date.now();\r\n      this.target = target;\r\n      player.wcStart = Date.now();\r\n    } else {\r\n      this.setDestination();\r\n    }\r\n  }\r\n}\r\n\r\nconst player = new Player();\r\n\r\nexport default player;\r\n\r\nfunction lineIntersection(pointA, pointB, pointC, pointD) {\r\n  var z1 = pointA.x - pointB.x;\r\n  var z2 = pointC.x - pointD.x;\r\n  var z3 = pointA.y - pointB.y;\r\n  var z4 = pointC.y - pointD.y;\r\n  var dist = z1 * z4 - z3 * z2;\r\n  if (dist == 0) {\r\n    return null;\r\n  }\r\n  var tempA = pointA.x * pointB.y - pointA.y * pointB.x;\r\n  var tempB = pointC.x * pointD.y - pointC.y * pointD.x;\r\n  var xCoor = (tempA * z2 - z1 * tempB) / dist;\r\n  var yCoor = (tempA * z4 - z3 * tempB) / dist;\r\n\r\n  if (\r\n    xCoor < Math.min(pointA.x, pointB.x) ||\r\n    xCoor > Math.max(pointA.x, pointB.x) ||\r\n    xCoor < Math.min(pointC.x, pointD.x) ||\r\n    xCoor > Math.max(pointC.x, pointD.x)\r\n  ) {\r\n    return null;\r\n  }\r\n  if (\r\n    yCoor < Math.min(pointA.y, pointB.y) ||\r\n    yCoor > Math.max(pointA.y, pointB.y) ||\r\n    yCoor < Math.min(pointC.y, pointD.y) ||\r\n    yCoor > Math.max(pointC.y, pointD.y)\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  const distance = Math.hypot(pointA.x - xCoor, pointA.y - yCoor);\r\n\r\n  return {\r\n    x: xCoor,\r\n    y: yCoor,\r\n    dist: distance,\r\n  };\r\n}\r\n","// pixels per second\r\nexport const MOVEMENT_SPEED = 300;\r\n\r\n// radians per second\r\nexport const TURN_SPEED = 6;\r\n\r\nexport const VIEW_DISTANCE = 150;\r\nexport const FOV = 60;\r\n\r\nexport const BLINK_RANGE = 100;\r\n","import player from \"./player\";\r\n\r\nlet ID = 1;\r\n\r\nexport class Entity {\r\n  constructor(options) {\r\n    this.id = ID++;\r\n    this.type = options.type;\r\n    this.x = options.x;\r\n    this.y = options.y;\r\n    this.height = options.height;\r\n    this.width = options.width;\r\n    this.boundHeight = options.boundHeight;\r\n    this.boundWidth = options.boundWidth;\r\n    this.img = options.img;\r\n\r\n    const deltaX = (this.width - this.boundWidth) / 2;\r\n    const deltaY = (this.height - this.boundHeight) / 2;\r\n\r\n    this.playerBounds = {\r\n      x1: this.x + deltaX,\r\n      x2: this.x + deltaX + this.boundWidth,\r\n      y1: this.y + deltaY,\r\n      y2: this.y + deltaY + this.boundHeight,\r\n    };\r\n\r\n    // useless\r\n    this.segments = [\r\n      {\r\n        start: { x: this.x, y: this.y },\r\n        end: { x: this.x + this.width, y: this.y },\r\n      },\r\n      {\r\n        start: { x: this.x, y: this.y + this.height },\r\n        end: { x: this.x + this.width, y: this.y + this.height },\r\n      },\r\n      {\r\n        start: { x: this.x, y: this.y },\r\n        end: { x: this.x, y: this.y + this.height },\r\n      },\r\n      {\r\n        start: { x: this.x + this.width, y: this.y },\r\n        end: { x: this.x + this.width, y: this.y + this.height },\r\n      },\r\n    ];\r\n\r\n    const { x1, x2, y1, y2 } = this.playerBounds;\r\n\r\n    // top bottom left right\r\n    this.playerBoundsSegments = [\r\n      {\r\n        start: { x: x1, y: y1 },\r\n        end: { x: x2, y: y1 },\r\n      },\r\n      {\r\n        start: { x: x1, y: y2 },\r\n        end: { x: x2, y: y2 },\r\n      },\r\n      {\r\n        start: { x: x1, y: y1 },\r\n        end: { x: x1, y: y2 },\r\n      },\r\n      {\r\n        start: { x: x2, y: y1 },\r\n        end: { x: x2, y: y2 },\r\n      },\r\n    ];\r\n  }\r\n}\r\n","import { mapSize } from \"..\";\r\nimport { Entity } from \"../Entity\";\r\nimport { rand } from \"../helpers\";\r\nimport player from \"../player\";\r\n\r\nexport class Tree extends Entity {\r\n  constructor(options) {\r\n    super(options);\r\n\r\n    this.type = \"tree\";\r\n    this.logs = options.logs;\r\n    this.dead = false;\r\n  }\r\n}\r\n\r\nconst treeImgs = new Array(10).fill().map((_, i) => {\r\n  const img = new Image();\r\n  img.src = `src/assets/trees/RE_0${i}.png`;\r\n  return img;\r\n});\r\n\r\nconst treeTypes = [\r\n  {\r\n    img: treeImgs[0],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 12,\r\n    boundWidth: 96,\r\n    boundHeight: 86,\r\n  },\r\n  {\r\n    img: treeImgs[1],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 15,\r\n    boundWidth: 108,\r\n    boundHeight: 78,\r\n  },\r\n  {\r\n    img: treeImgs[2],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 9,\r\n    boundWidth: 86,\r\n    boundHeight: 86,\r\n  },\r\n  {\r\n    img: treeImgs[3],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 9,\r\n    boundWidth: 86,\r\n    boundHeight: 86,\r\n  },\r\n  {\r\n    img: treeImgs[4],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 3,\r\n    boundWidth: 60,\r\n    boundHeight: 60,\r\n  },\r\n  {\r\n    img: treeImgs[5],\r\n    width: 128,\r\n    height: 128,\r\n    logs: 6,\r\n    boundWidth: 78,\r\n    boundHeight: 76,\r\n  },\r\n];\r\n\r\nexport const generateTree = () => {\r\n  const treeType = treeTypes[rand(0, treeTypes.length)];\r\n  const { width, height } = treeType;\r\n\r\n  return new Tree(\r\n    Object.assign(\r\n      {\r\n        x: rand(width, mapSize - width),\r\n        y: rand(height, mapSize - height),\r\n      },\r\n      treeType\r\n    )\r\n  );\r\n};\r\n","import { mapSize } from \"..\";\r\nimport { Entity } from \"../Entity\";\r\nimport { rand } from \"../helpers\";\r\nimport player from \"../player\";\r\n\r\nexport class Stone extends Entity {\r\n  constructor(options) {\r\n    super(options);\r\n\r\n    this.type = \"stone\";\r\n  }\r\n}\r\n\r\nconst stoneImgs = new Array(9).fill().map((_, i) => {\r\n  const img = new Image();\r\n  img.src = `src/assets/stones/SM_00${i + 1}.png`;\r\n  return img;\r\n});\r\n\r\nconst stoneTypes = [\r\n  {\r\n    img: stoneImgs[0],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 88,\r\n    boundHeight: 96,\r\n  },\r\n  {\r\n    img: stoneImgs[1],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 96,\r\n    boundHeight: 96,\r\n  },\r\n  {\r\n    img: stoneImgs[2],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 68,\r\n    boundHeight: 80,\r\n  },\r\n  {\r\n    img: stoneImgs[3],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 86,\r\n    boundHeight: 78,\r\n  },\r\n  {\r\n    img: stoneImgs[4],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 96,\r\n    boundHeight: 64,\r\n  },\r\n  {\r\n    img: stoneImgs[5],\r\n    width: 128,\r\n    height: 128,\r\n    boundWidth: 114,\r\n    boundHeight: 112,\r\n  },\r\n];\r\n\r\nexport const generateStone = () => {\r\n  const stoneType = stoneTypes[rand(0, stoneTypes.length)];\r\n  const { width, height } = stoneType;\r\n\r\n  return new Stone(\r\n    Object.assign(\r\n      {\r\n        x: rand(width, mapSize - width),\r\n        y: rand(height, mapSize - height),\r\n      },\r\n      stoneType\r\n    )\r\n  );\r\n};\r\n","import player from \"./player\";\r\nimport controls from \"./controls\";\r\nimport { screenToMapCoords, mapToScreenCoords, rand } from \"./helpers\";\r\nimport { MOVEMENT_SPEED, TURN_SPEED } from \"./consts\";\r\n\r\nimport axe from \"../assets/axe.png\";\r\nimport log from \"../assets/log.png\";\r\nimport ground from \"../assets/ground.png\";\r\nimport \"../styles/index.scss\";\r\nimport { generateTree } from \"./Entities/Tree\";\r\nimport { generateStone } from \"./Entities/Stone\";\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\nconst ctx = canvas.getContext(\"2d\");\r\n\r\nconst viewWidth = window.innerWidth;\r\nconst viewHeight = window.innerHeight;\r\n\r\nexport const mapSize = 10000;\r\n\r\nexport const halfWidth = viewWidth / 2;\r\nexport const halfHeight = viewHeight / 2;\r\n\r\nconst mapBounds = {\r\n  x1: player.radius,\r\n  x2: mapSize - player.radius,\r\n  y1: player.radius,\r\n  y2: mapSize - player.radius,\r\n};\r\n\r\ncanvas.width = viewWidth;\r\ncanvas.height = viewHeight;\r\n\r\nconst axeImg = new Image();\r\naxeImg.src = axe;\r\n\r\nconst groundImg = new Image();\r\ngroundImg.src = ground;\r\n\r\nconst logImg = new Image();\r\nlogImg.src = log;\r\n\r\nconst playerImg = new Image();\r\nplayerImg.src = `src/assets/survivor/knife/idle/survivor-idle_knife_0.png`;\r\n\r\nconst trees = new Array(1000).fill().map(generateTree);\r\n\r\nconst stones = new Array(1000).fill().map(generateStone);\r\n\r\nexport const mapElements = [...trees, ...stones];\r\n\r\nfunction updatePointerPosition(e) {\r\n  if (e.target.touches) {\r\n    controls.mouseX = e.target.touches[0].clientX;\r\n    controls.mouseY = e.target.touches[0].clientY;\r\n  } else {\r\n    controls.mouseX = e.clientX;\r\n    controls.mouseY = e.clientY;\r\n  }\r\n}\r\n\r\nconst pointerUp = (e) => {\r\n  controls.mouse1 = false;\r\n};\r\n\r\nconst pointerDown = (e) => {\r\n  controls.mouse1 = true;\r\n};\r\n\r\ncanvas.addEventListener(\"mousemove\", updatePointerPosition);\r\ncanvas.addEventListener(\"touchmove\", updatePointerPosition);\r\n\r\ncanvas.addEventListener(\"mousedown\", pointerDown);\r\ncanvas.addEventListener(\"touchstart\", pointerDown);\r\n\r\ndocument.addEventListener(\"mouseup\", pointerUp);\r\ndocument.addEventListener(\"touchup\", pointerUp);\r\n\r\ncanvas.addEventListener(\"contextmenu\", (e) => {\r\n  e.preventDefault();\r\n});\r\n\r\nfunction keyPress(e) {}\r\n\r\ndocument.addEventListener(\"keypress\", keyPress);\r\n\r\nlet lastFrameTime = Date.now();\r\n\r\n// draw\r\n\r\nfunction loop() {\r\n  const time = Date.now();\r\n  const frameTime = time - lastFrameTime;\r\n\r\n  ctx.clearRect(0, 0, viewWidth, viewHeight);\r\n\r\n  if (controls.mouse1) {\r\n    const mapCoords = screenToMapCoords(controls.mouseX, controls.mouseY);\r\n\r\n    const tree = trees.find(\r\n      (el) =>\r\n        mapCoords.x >= el.playerBounds.x1 &&\r\n        mapCoords.x <= el.playerBounds.x2 &&\r\n        mapCoords.y >= el.playerBounds.y1 &&\r\n        mapCoords.y <= el.playerBounds.y2\r\n    );\r\n\r\n    player.setTarget(tree);\r\n  }\r\n\r\n  if (player.target) {\r\n    if (player.wcStart + 1000 < time) {\r\n      player.woodcut();\r\n    }\r\n  }\r\n\r\n  // turning\r\n  // todo: optimize\r\n  if (player.facingTarget) {\r\n    let turnDistance = Math.abs(player.facingTarget - player.facing);\r\n    let ccw = false;\r\n\r\n    if (turnDistance > Math.PI) {\r\n      turnDistance = Math.PI * 2 - turnDistance;\r\n      ccw = true;\r\n    }\r\n\r\n    const toTurn = (TURN_SPEED * (frameTime / 1000)) / turnDistance;\r\n\r\n    const p = Math.min(toTurn, turnDistance);\r\n\r\n    if (ccw) {\r\n      // todo: fix perpetual rotation\r\n      if (player.facingTarget - player.facing < 0) {\r\n        player.facing =\r\n          player.facing +\r\n          p * (Math.PI * 2 - Math.abs(player.facingTarget - player.facing));\r\n      } else {\r\n        player.facing =\r\n          player.facing -\r\n          p * (Math.PI * 2 - Math.abs(player.facingTarget - player.facing));\r\n      }\r\n    } else {\r\n      player.facing = player.facing + p * (player.facingTarget - player.facing);\r\n    }\r\n\r\n    if (turnDistance < 0.1 && turnDistance > -0.1) {\r\n      player.facing = player.facingTarget;\r\n      player.facingTarget = null;\r\n    }\r\n  }\r\n\r\n  // if (!player.facingTarget && player.destination) {\r\n  if (player.destination != null) {\r\n    const distance = Math.hypot(\r\n      player.x - player.destination.x,\r\n      player.y - player.destination.y\r\n    );\r\n\r\n    const toMove = (MOVEMENT_SPEED * (frameTime / 1000)) / distance;\r\n\r\n    let x, y;\r\n\r\n    if (toMove < distance) {\r\n      const px = toMove * (player.destination.x - player.x);\r\n      const py = toMove * (player.destination.y - player.y);\r\n\r\n      x = player.x + px;\r\n      y = player.y + py;\r\n    } else {\r\n      x = player.destination.x;\r\n      y = player.destination.y;\r\n      player.destination = null;\r\n    }\r\n\r\n    let collision = false;\r\n\r\n    // check collisions for new position\r\n    mapElements\r\n      .filter((el) => !el.dead)\r\n      .forEach((el) => {\r\n        if (\r\n          x >= el.playerBounds.x1 &&\r\n          x <= el.playerBounds.x2 &&\r\n          y >= el.playerBounds.y1 &&\r\n          y <= el.playerBounds.y2\r\n        ) {\r\n          collision = true;\r\n        }\r\n      });\r\n\r\n    if (\r\n      x <= mapBounds.x1 ||\r\n      x >= mapBounds.x2 ||\r\n      y <= mapBounds.y1 ||\r\n      y >= mapBounds.y2\r\n    ) {\r\n      collision = true;\r\n    }\r\n\r\n    if (!collision) {\r\n      player.x = x;\r\n      player.y = y;\r\n    } else {\r\n      player.destination = null;\r\n    }\r\n  }\r\n\r\n  // play area\r\n  const playAreaScreenCoords = mapToScreenCoords(mapSize, mapSize);\r\n  ctx.fillStyle = \"#544321\";\r\n  ctx.fillRect(\r\n    Math.max(0, halfWidth - player.x),\r\n    Math.max(0, halfHeight - player.y),\r\n    Math.min(viewWidth, playAreaScreenCoords.x),\r\n    Math.min(viewHeight, playAreaScreenCoords.y)\r\n  );\r\n\r\n  const tileSize = 96;\r\n\r\n  for (let x = 0; x < viewWidth / tileSize + 1; x++) {\r\n    for (let y = 0; y < viewHeight / tileSize + 1; y++) {\r\n      ctx.drawImage(\r\n        groundImg,\r\n        x * tileSize - (player.x % tileSize),\r\n        y * tileSize - (player.y % tileSize),\r\n        tileSize,\r\n        tileSize\r\n      );\r\n    }\r\n  }\r\n\r\n  ctx.fillStyle = \"rgba(80, 57, 23, 0.8)\";\r\n  mapElements.forEach((el) => {\r\n    const elCoords = mapToScreenCoords(el.playerBounds.x1, el.playerBounds.y1);\r\n    ctx.fillRect(elCoords.x, elCoords.y, el.boundWidth, el.boundHeight);\r\n  });\r\n\r\n  // map elements\r\n  stones.forEach((el) => {\r\n    const elCoords = mapToScreenCoords(el.x, el.y);\r\n\r\n    if (\r\n      elCoords.x > viewWidth ||\r\n      elCoords.y > viewHeight ||\r\n      elCoords.x + el.width < 0 ||\r\n      elCoords.y + el.height < 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // ctx.setTransform(1, 0, 0, 1, halfWidth, halfHeight);\r\n    // ctx.rotate(0);\r\n    ctx.drawImage(el.img, elCoords.x, elCoords.y, el.width, el.height);\r\n    // ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  });\r\n  trees.forEach((el) => {\r\n    if (el.dead) {\r\n      return;\r\n    }\r\n\r\n    const elCoords = mapToScreenCoords(el.x, el.y);\r\n\r\n    if (\r\n      elCoords.x > viewWidth ||\r\n      elCoords.y > viewHeight ||\r\n      elCoords.x + el.width < 0 ||\r\n      elCoords.y + el.height < 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // ctx.setTransform(1, 0, 0, 1, halfWidth, halfHeight);\r\n    // ctx.rotate(0);\r\n    ctx.drawImage(el.img, elCoords.x, elCoords.y, el.width, el.height);\r\n    // ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  });\r\n\r\n  // destination target marker\r\n  if (player.destination) {\r\n    const destinationScreenCoords = mapToScreenCoords(\r\n      player.destination.x,\r\n      player.destination.y\r\n    );\r\n    const delta = time - player.destination.time;\r\n    const radius = Math.max(20 - delta / 10, 5);\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"#f00\";\r\n    ctx.lineWidth = 1;\r\n    ctx.arc(\r\n      destinationScreenCoords.x,\r\n      destinationScreenCoords.y,\r\n      radius,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n\r\n  // player\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"#666\";\r\n  // ctx.strokeStyle = \"#222\";\r\n  // ctx.lineWidth = 3;\r\n  // ctx.arc(halfWidth, halfHeight, player.radius, 0, Math.PI * 2);\r\n  // ctx.closePath();\r\n  // ctx.fill();\r\n  // ctx.stroke();\r\n\r\n  // const x = halfWidth + 10 * Math.cos(player.facing);\r\n  // const y = halfHeight + 10 * Math.sin(player.facing);\r\n\r\n  // // facing dot\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"#a34\";\r\n  // ctx.arc(x, y, 6, 0, Math.PI * 2);\r\n  // ctx.closePath();\r\n  // ctx.fill();\r\n\r\n  ctx.setTransform(0.2, 0, 0, 0.2, halfWidth, halfHeight);\r\n  ctx.rotate(player.facing);\r\n  ctx.drawImage(playerImg, -289 / 2, -224 / 2);\r\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n  // axe\r\n  if (player.wcStart) {\r\n    const percent = (time - 600 - player.wcStart) / 400;\r\n    if (percent > 0 && percent <= 1) {\r\n      ctx.setTransform(1, 0, 0, 1, halfWidth, halfHeight);\r\n      ctx.rotate(player.facing + percent * 1.5);\r\n      ctx.drawImage(axeImg, 0, -60);\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n  }\r\n\r\n  // out of bounds\r\n  // todo: optimize\r\n  ctx.fillStyle = \"#222\";\r\n  // left\r\n  if (halfWidth - player.x > 0) {\r\n    ctx.fillRect(0, 0, halfWidth - player.x, viewHeight);\r\n  }\r\n  // top\r\n  if (halfHeight - player.y > 0) {\r\n    ctx.fillRect(0, 0, viewWidth, halfHeight - player.y);\r\n  }\r\n  // right\r\n  if (playAreaScreenCoords.x < viewWidth) {\r\n    ctx.fillRect(\r\n      playAreaScreenCoords.x,\r\n      0,\r\n      viewWidth - playAreaScreenCoords.x,\r\n      viewHeight\r\n    );\r\n  }\r\n  // bottom\r\n  if (playAreaScreenCoords.y < viewHeight) {\r\n    ctx.fillRect(\r\n      0,\r\n      playAreaScreenCoords.y,\r\n      viewWidth,\r\n      viewHeight - playAreaScreenCoords.y\r\n    );\r\n  }\r\n\r\n  const cellSize = 50;\r\n  const padding = 8;\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(10, viewHeight - cellSize - 10, cellSize, cellSize);\r\n  ctx.drawImage(\r\n    logImg,\r\n    10 + padding,\r\n    viewHeight - cellSize - 10 + padding,\r\n    cellSize - padding * 2,\r\n    cellSize - padding * 2\r\n  );\r\n  ctx.font = \"20px monospace\";\r\n  ctx.textBaseline = \"top\";\r\n  ctx.fillStyle = \"#ed4\";\r\n  ctx.fillText(player.logs, 10 + 2, viewHeight - cellSize - 10 + 2);\r\n\r\n  lastFrameTime = time;\r\n\r\n  requestAnimationFrame(loop);\r\n  // setTimeout(loop, 16);\r\n}\r\n\r\nloop();\r\n","module.exports = __webpack_public_path__ + \"src/assets/axe.png\";","module.exports = __webpack_public_path__ + \"src/assets/log.png\";","module.exports = __webpack_public_path__ + \"src/assets/ground.png\";"],"sourceRoot":""}